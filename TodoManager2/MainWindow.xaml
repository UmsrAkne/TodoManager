<Window x:Class="TodoManager2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TodoManager2"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="900">

    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding ReloadTodoListCommand}" />
    </Window.InputBindings>

    <Window.Resources>

        <!--Control colors.-->
        <Color x:Key="SelectedBackgroundColor">#FFE5EBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Grid.Column="0"
              Grid.RowSpan="2">
            <StackPanel>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="検索期間指定"
                               Grid.Column="0"
                               HorizontalAlignment="Center"
                               />
                    <ComboBox Grid.Column="1">

                        <ComboBoxItem Content="今日のタスク"
                                      HorizontalAlignment="Stretch">
                            <ComboBoxItem.Tag> 1 </ComboBoxItem.Tag>
                        </ComboBoxItem>

                        <ComboBoxItem Content="３日前まで"
                                      HorizontalAlignment="Stretch">
                            <ComboBoxItem.Tag> 3 </ComboBoxItem.Tag>
                        </ComboBoxItem>

                        <ComboBoxItem Content="１週間前まで"
                                      IsSelected="True"
                                      HorizontalAlignment="Stretch">
                            <ComboBoxItem.Tag> 7 </ComboBoxItem.Tag>
                        </ComboBoxItem>

                        <ComboBoxItem Content="１ヶ月前まで"
                                      HorizontalAlignment="Stretch">
                            <ComboBoxItem.Tag> 30 </ComboBoxItem.Tag>
                        </ComboBoxItem>

                        <ComboBoxItem Content="６ヶ月前まで"
                                      HorizontalAlignment="Stretch">
                            <ComboBoxItem.Tag> 180 </ComboBoxItem.Tag>
                        </ComboBoxItem>

                        <ComboBoxItem Content="期間無指定"
                                      HorizontalAlignment="Stretch">
                            <ComboBoxItem.Tag> -1 </ComboBoxItem.Tag>
                        </ComboBoxItem>

                    </ComboBox>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="タグ検索方式"
                               Margin="0,2,0,0"
                               HorizontalAlignment="Center"
                               Grid.Column="0"
                               />
                    <ComboBox Grid.Column="1" >

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ChangeTagSearchTypeCommand}"
                                                       CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},
                                                       Path=SelectedItem.Content}"
                                                       />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBoxItem Content="AND"
                                      HorizontalAlignment="Stretch">
                        </ComboBoxItem>

                        <ComboBoxItem Content="OR"
                                      IsSelected="True"
                                      HorizontalAlignment="Stretch">
                        </ComboBoxItem>
                    </ComboBox>
                </Grid>
                <ListView ItemsSource="{Binding TagList}"
                          Grid.Column="0"
                          >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="tags"
                                            Width="100"
                                            DisplayMemberBinding="{Binding Content}"
                                            />

                            <GridViewColumn Header="check">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsChecked}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>

            </StackPanel>
        </Grid>

        <StackPanel Grid.Column="1"
                    Grid.Row="0"
                    >

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>


                <TextBlock Text="title"
                           Margin="0,2,4,2"
                           Grid.Column="0"
                           FontSize="14"
                           />
                <TextBox Name="titleInputTextBox"
                         Text="{Binding CreatingTodo.Title, UpdateSourceTrigger=PropertyChanged}"
                         Margin="0,2,0,2"
                         Grid.Column="1"
                         FontSize="14"
                         />
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="discription"
                           Margin="0,0,2,0"
                           Grid.Column="0"
                           FontSize="14"
                           />
                <TextBox Name="textInputTextBox"
                         Text="{Binding CreatingTodo.Text, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Column="1"
                         Height="auto"
                         MaxHeight="60"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Margin="0,2,0,2"
                         FontSize="14"
                         />
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="work span"
                           Margin="0,0,4,0"
                           Grid.Column="0"
                           FontSize="14"
                           />
                
                <TextBox Name="workSpanInputTextBox"
                         Text="{Binding CreatingTodo.WorkSpanMinutes, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap"
                         AcceptsReturn="True"
                         Grid.Column="1"
                         FontSize="14"
                         />

                <TextBlock Text="Priority"
                           Margin="16,0,4,0"
                           Grid.Column="2"
                           FontSize="14"
                           />

                <TextBox Name="priorityInputTextBox"
                         Text="{Binding CreatingTodo.Priority, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Column="3"
                         FontSize="14"
                         />

                <TextBlock Text="DueDate after"
                           Margin="16,0,4,0"
                           Grid.Column="4"
                           FontSize="14"
                           />

                <Grid Grid.Column="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <TextBox Text="{Binding CreatingTodo.DueDayNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Grid.Column="0"
                             FontSize="14"
                             />

                    <TextBlock Text="day"
                               Grid.Column="1"
                               Margin="4,0,0,0"
                               FontSize="14"
                               />
                </Grid>

                <StackPanel Orientation="Horizontal"
                            Grid.Column="6"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Center"
                            >

                    <TextBlock Text="Completed"
                               Margin="0,0,4,0"
                               Grid.Column="6"
                               FontSize="14"
                               />

                    <CheckBox Grid.Column="7"
                              IsChecked="{Binding CreatingTodo.IsCompleted, UpdateSourceTrigger=PropertyChanged}" 
                              Margin="0,2,0,0"
                              FontSize="14"
                              />
                </StackPanel>

                <Button Content="Add todo"
                        Grid.Column="8"
                        Margin="0,0,4,0"
                        FontSize="14"
                        Command="{Binding AddTodoCommand}"
                        />
            </Grid>


        </StackPanel>

        <ListView Grid.Column="1"
                  Grid.Row="1"
                  Margin="0,2,2,2"
                  ItemsSource="{Binding TodoList}"
                  >

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            
                            <ControlTemplate TargetType="ListViewItem">
                                <Border x:Name="Border"
                                        Padding="1"
                                        SnapsToDevicePixels="true"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="Lavender"
                                        BorderThickness="0,0,0,1"
                                        >
                                    
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualState x:Name="Unselected" />
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Panel.Background).  (SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0"
                                                                             Value="{StaticResource SelectedBackgroundColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>

                                            <VisualState x:Name="SelectedUnfocused">
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                                  Storyboard.TargetProperty="(Panel.Background).  (SolidColorBrush.Color)">
                                                        <EasingColorKeyFrame KeyTime="0"
                                                                             Value="{StaticResource SelectedUnfocusedColor}" />
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>

                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCompleted}" Value="False">
                            <Setter Property="Background" Value="Honeydew"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding WorkSpanMinutes}" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>

                    </Style.Triggers>

                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>

                <GridView>
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsCompleted}"
                                          Background="Transparent"
                                          BorderBrush="Gray"
                                          BorderThickness="0.5"
                                          >
                                    <CheckBox.RenderTransform>
                                        <ScaleTransform ScaleX="1.3" ScaleY="1.2"/>
                                    </CheckBox.RenderTransform>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Checked">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}
                                                                          ,Path=DataContext.RewriteTodoCommand}"
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}
                                                                                   ,Path=Content}"
                                                                   />
                                        </i:EventTrigger>

                                        <i:EventTrigger EventName="Unchecked">
                                            <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window}
                                                                          ,Path=DataContext.RewriteTodoCommand}"
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}
                                                                                   ,Path=Content}"
                                                                   />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                </CheckBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="作成日"
                                    DisplayMemberBinding="{Binding CreationDateString}"/>

                    <GridViewColumn Header="所要時間">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding WorkSpanMinutes}"/>
                                    <TextBlock Text=" min"/>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                            <GridViewColumn Header="タイトル">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel MinWidth="200">
                                    <TextBlock Text="{Binding Title}"/>

                                    <TextBlock Text="{Binding Text}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}, Path=IsSelected}"
                                                                 Value="True">
                                                        
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListViewItem}, Path=IsSelected}"
                                                                 Value="False" >
                                                        
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="完了日時"
                                    Width="75"
                                    DisplayMemberBinding="{Binding CompletionDateTimeString}"/>

                    <GridViewColumn Header="期限"
                                    DisplayMemberBinding="{Binding DueDateTimeString}"
                                    >
                        
                    </GridViewColumn>
                    
                </GridView>
            </ListView.View>
        </ListView>

    </Grid>

</Window>
